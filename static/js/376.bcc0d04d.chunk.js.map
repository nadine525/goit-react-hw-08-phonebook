{"version":3,"file":"static/js/376.bcc0d04d.chunk.js","mappings":"yQAEaA,EAAOC,EAAAA,GAAAA,KAAH,0NAGK,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,QAAQC,eAAxB,IASdC,EAAQL,EAAAA,GAAAA,MAAH,6DAEP,SAAAC,GAAK,OAAIA,EAAMC,MAAMI,OAAOC,IAAvB,IAGHC,EAAQR,EAAAA,GAAAA,MAAH,yOAcLS,EAAST,EAAAA,GAAAA,OAAH,oZAiCNU,GAZWV,EAAAA,GAAAA,EAAH,sGAIV,SAAAC,GAAK,OAAIA,EAAMC,MAAMI,OAAOC,IAAvB,IAGmBP,EAAAA,GAAAA,IAAH,qEAKFA,EAAAA,GAAAA,EAAH,uHAKhB,SAAAC,GAAK,OAAIA,EAAMC,MAAMI,OAAOC,IAAvB,K,UCShB,EArEyB,WACvB,IAAMI,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAAC,GACnB,OAAQA,EAAMC,cAAcR,MAC1B,IAAK,OACHC,EAAQM,EAAMC,cAAcC,OAC5B,MACF,IAAK,QACHN,EAASI,EAAMC,cAAcC,OAC7B,MACF,IAAK,WACHJ,EAAYE,EAAMC,cAAcC,OAKrC,EAcD,OACE,iCACE,SAACb,EAAD,UAAgB,uCAChB,UAACX,EAAD,CAAMyB,SAfW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAO,CAAEb,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,GAC5BU,QAAQC,IAAIF,GAEZhB,GAASmB,EAAAA,EAAAA,IAAaH,IAEtBV,EAAS,IACTE,EAAY,IACZJ,EAAQ,GACT,EAKiCgB,aAAa,MAA3C,WACE,SAAC1B,EAAD,CAAO2B,QAAQ,SAAe,QAE9B,SAACxB,EAAD,CACEyB,KAAK,OACLnB,KAAK,OACLS,MAAOT,EACPoB,SAAUd,EACVe,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,KAEV,SAAChC,EAAD,UAAO,WACP,SAACG,EAAD,CACEyB,KAAK,QACLnB,KAAK,QACLS,MAAOP,EACPkB,SAAUd,KAEZ,SAACf,EAAD,UAAO,cACP,SAACG,EAAD,CACEyB,KAAK,WACLnB,KAAK,WACLS,MAAOL,EACPgB,SAAUd,KAEZ,SAACX,EAAD,CAAQwB,KAAK,SAAb,SAAsB,sBAI7B,EC5EYK,EAAWtC,EAAAA,GAAAA,IAAH,0JCSrB,EARqB,WACnB,OACE,SAACsC,EAAD,WACE,SAAC,EAAD,KAGL,C","sources":["components/RegistrationForm/RegistrationForm.styled.js","components/RegistrationForm/RegistrationForm.js","pages/Registration/Registration.styled.js","pages/Registration/Registration.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  padding: 18px 10px;\n  width: 400px;\n  border: 1px solid ${props => props.theme.borders.borderColorMain};\n  border-radius: 5px;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  align-items: center;\n  gap: 12px;\n`;\n\nexport const Label = styled.label`\n  text-align: start;\n  color: ${props => props.theme.colors.text};\n`;\n\nexport const Input = styled.input`\n  margin-left: 8px;\n  width: 300px;\n  height: 24px;\n  font-size: 16px;\n  border-radius: 5px;\n  border: 1px solid black;\n  &:hover,\n  &:focus {\n    color: #c75124;\n    border: 1px solid #c75124;\n  }\n`;\n\nexport const Button = styled.button`\n  margin-right: 10px;\n  border: 1px solid black;\n  border-radius: 5px;\n  color: black;\n  cursor: pointer;\n  display: inline-block;\n  font-family: 'Roboto', sans-serif;\n  font-size: 14px;\n  height: 24px;\n  font-size: 14px;\n  padding: 0 10px;\n  text-align: center;\n  background-color: lightblue;\n\n  &:hover {\n    color: #c75124;\n    border: 1px solid #c75124;\n  }\n`;\n\nexport const Paragraf = styled.p`\n  font-weight: 700;\n  font-size: 30px;\n  line-height: 20px;\n  color: ${props => props.theme.colors.text};\n`;\n\nexport const ContactFormDivision = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ParagrafCreate = styled.p`\n  font-size: 18px;\n  font-weight: 400;\n  margin-top: 0;\n  margin-bottom: 0;\n  color: ${props => props.theme.colors.text};\n`;\n","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { registerUser } from 'redux/auth/operations';\nimport {\n  Form,\n  Button,\n  Label,\n  Input,\n  ParagrafCreate,\n} from './RegistrationForm.styled';\n\nconst RegistrationForm = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = event => {\n    switch (event.currentTarget.name) {\n      case 'name':\n        setName(event.currentTarget.value);\n        break;\n      case 'email':\n        setEmail(event.currentTarget.value);\n        break;\n      case 'password':\n        setPassword(event.currentTarget.value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const user = { name, email, password };\n    console.log(user);\n\n    dispatch(registerUser(user));\n\n    setEmail('');\n    setPassword('');\n    setName('');\n  };\n\n  return (\n    <>\n      <ParagrafCreate>Fil the registration Form, please</ParagrafCreate>\n      <Form onSubmit={handleSubmit} autoComplete=\"off\">\n        <Label htmlFor=\"name\"></Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <Label>Email</Label>\n        <Input\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n        />\n        <Label>Password</Label>\n        <Input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n        />\n        <Button type=\"submit\">Registration</Button>\n      </Form>\n    </>\n  );\n};\n\nexport default RegistrationForm;\n","import styled from 'styled-components';\n\nexport const Division = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding-top: 30px;\n  padding-bottom: 30px;\n  align-items: center;\n`;\n","import RegistrationForm from 'components/RegistrationForm/RegistrationForm';\nimport { Division } from './Registration.styled';\n\nconst Registration = () => {\n  return (\n    <Division>\n      <RegistrationForm />\n    </Division>\n  );\n};\n\nexport default Registration;\n"],"names":["Form","styled","props","theme","borders","borderColorMain","Label","colors","text","Input","Button","ParagrafCreate","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","event","currentTarget","value","onSubmit","e","preventDefault","user","console","log","registerUser","autoComplete","htmlFor","type","onChange","pattern","title","required","Division"],"sourceRoot":""}