{"version":3,"file":"static/js/207.3dae2744.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","components/ContactElement/ContactElement.styled.js","components/Modal/Modal.styled.js","components/Modal/Modal.js","components/ContactEditForm/ContactEditForm.styled.js","components/ContactEditForm/ContactEditForm.js","components/ContactElement/ContactElement.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  padding: 10px;\n  width: 400px;\n  border: 1px solid black;\n  border-radius: 5px;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  align-items: center;\n  gap: 10px;\n`;\n\nexport const Label = styled.label`\n  text-align: left;\n`;\n\nexport const Input = styled.input`\n  width: 300px;\n  height: 24px;\n  font-size: 16px;\n  border-radius: 5px;\n  border: 1px solid black;\n  &:hover,\n  &:focus {\n    color: #c75124;\n    border: 1px solid #c75124;\n  }\n`;\n\nexport const Button = styled.button`\n  margin-right: 10px;\n  border: 1px solid black;\n  border-radius: 5px;\n  color: black;\n  cursor: pointer;\n  display: inline-block;\n  font-family: 'Roboto', sans-serif;\n  font-size: 14px;\n  height: 24px;\n  font-size: 14px;\n  padding: 0 10px;\n  text-align: center;\n  background-color: lightblue;\n\n  &:hover {\n    color: #c75124;\n    border: 1px solid #c75124;\n  }\n`;\n\nexport const Paragraf = styled.p`\n  font-weight: 700;\n  font-size: 30px;\n  line-height: 20px;\n  color: #c75124;\n`;\n\nexport const ContactFormDivision = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ParagrafCreate = styled.p`\n  font-size: 18px;\n  font-weight: 400;\n  margin-top: 0;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    if (filter === ' ') {\n      return contacts;\n    } else {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n    }\n  }\n);\n","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport {\n  Form,\n  Label,\n  Input,\n  Button,\n  ContactFormDivision,\n  ParagrafCreate,\n} from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport * as contactsOperations from '../../redux/contacts/operations';\nimport { toast } from 'react-toastify';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleChange = event => {\n    switch (event.currentTarget.name) {\n      case 'name':\n        setName(event.currentTarget.value);\n        break;\n      case 'number':\n        setNumber(event.currentTarget.value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    // const { name, number } = event.currentTarget.elements;\n\n    const newContact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n      )\n    ) {\n      return toast.warning(`${newContact.name} is already in the contact list`);\n    }\n\n    dispatch(contactsOperations.addContact(newContact));\n\n    console.log(newContact);\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <ContactFormDivision>\n        <ParagrafCreate>Contact Card</ParagrafCreate>\n\n        <Form onSubmit={handleSubmit}>\n          <Label htmlFor=\"name\">Name</Label>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n\n          <Label htmlFor=\"number\">Number</Label>\n\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n          <Button type=\"submit\">Add contact</Button>\n        </Form>\n      </ContactFormDivision>\n    </>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const Contact = styled.li`\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n  gap: 10px;\n`;\n\nexport const Person = styled.p`\n  display: flex;\n  align-items: center;\n  margin-top: 0;\n  margin-bottom: 8px;\n  color: black;\n\n  svg {\n    display: block;\n    margin-right: 12px;\n  }\n`;\n\nexport const ButtonDelete = styled.button`\n  border: 1px solid black;\n  border-radius: 5px;\n  color: black;\n  cursor: pointer;\n  display: inline-block;\n  font-family: 'Roboto', sans-serif;\n  font-size: 14px;\n  height: 24px;\n  font-size: 14px;\n  padding: 0 10px;\n  text-align: center;\n  background-color: lightblue;\n\n  &:hover {\n    color: #c75124;\n    border: 1px solid #c75124;\n  }\n`;\n\nexport const ButtonEdit = styled.button`\n  margin-right: 14px;\n  border: 1px solid black;\n  border-radius: 5px;\n  color: black;\n  cursor: pointer;\n  display: inline-block;\n  font-family: 'Roboto', sans-serif;\n  font-size: 14px;\n  height: 24px;\n  font-size: 14px;\n  padding: 0 10px;\n  text-align: center;\n  background-color: lightblue;\n\n  &:hover {\n    color: #c75124;\n    border: 1px solid #c75124;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const BackDrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n`;\n\nexport const ModalContent = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  min-height: 180px;\n  max-width: 440px;\n  width: 100%;\n  padding: 12px;\n  background-color: #fff;\n  border-radius: 3px;\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n`;\n","import { createPortal } from 'react-dom';\nimport { useEffect } from 'react';\nimport { BackDrop, ModalContent } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ children, closeModal }) => {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        closeModal();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const onContentClick = evt => {\n    if (evt.currentTarget === evt.target) {\n      closeModal();\n    }\n  };\n\n  return createPortal(\n    <BackDrop onClick={onContentClick}>\n      <ModalContent>{children}</ModalContent>\n    </BackDrop>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  padding: 10px;\n  width: 400px;\n  border: 1px solid black;\n  border-radius: 5px;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  align-items: center;\n  gap: 10px;\n`;\n\nexport const Label = styled.label`\n  text-align: left;\n`;\n\nexport const Input = styled.input`\n  width: 300px;\n  height: 24px;\n  font-size: 16px;\n  border-radius: 5px;\n  border: 1px solid black;\n  &:hover,\n  &:focus {\n    color: #c75124;\n    border: 1px solid #c75124;\n  }\n`;\n\nexport const Button = styled.button`\n  margin-right: 10px;\n  border: 1px solid black;\n  border-radius: 5px;\n  color: black;\n  cursor: pointer;\n  display: inline-block;\n  font-family: 'Roboto', sans-serif;\n  font-size: 14px;\n  height: 24px;\n  font-size: 14px;\n  padding: 0 10px;\n  text-align: center;\n  background-color: lightblue;\n\n  &:hover {\n    color: #c75124;\n    border: 1px solid #c75124;\n  }\n`;\n\nexport const ContactFormDivision = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\n// export const ParagrafCreate = styled.p`\n//   font-size: 18px;\n//   font-weight: 400;\n//   margin-top: 0;\n// `;\n","import { useState } from 'react';\nimport {\n  Form,\n  Label,\n  Input,\n  Button,\n  ContactFormDivision,\n} from './ContactEditForm.styled';\nimport { useDispatch } from 'react-redux';\nimport * as contactsOperations from '../../redux/contacts/operations';\n\nconst ContactEditForm = ({ id, filledName, filledNumber }) => {\n  const [name, setName] = useState(filledName);\n  const [number, setNumber] = useState(filledNumber);\n\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    switch (event.currentTarget.name) {\n      case 'name':\n        setName(event.currentTarget.value);\n        break;\n      case 'number':\n        setNumber(event.currentTarget.value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const submitEditedContact = event => {\n    event.preventDefault();\n\n    const editedContact = {\n      id,\n      name,\n      number,\n    };\n    console.log(editedContact);\n    dispatch(contactsOperations.editContact(editedContact));\n  };\n\n  return (\n    <>\n      <ContactFormDivision>\n        <Form onSubmit={submitEditedContact}>\n          <Label htmlFor=\"name\">Name</Label>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n\n          <Label htmlFor=\"number\">Number</Label>\n\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n          <Button type=\"submit\">Save</Button>\n        </Form>\n      </ContactFormDivision>\n    </>\n  );\n};\n\nexport default ContactEditForm;\n","import React from 'react';\nimport { FaPhone } from 'react-icons/fa';\nimport PropTypes from 'prop-types';\nimport {\n  Contact,\n  Person,\n  ButtonEdit,\n  ButtonDelete,\n} from './ContactElement.styled';\n\nimport { iconSize } from '../constans';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport Modal from 'components/Modal';\nimport ContactEditForm from 'components/ContactEditForm/ContactEditForm';\nimport * as contactsOperations from '../../redux/contacts/operations';\n\nconst ContactElement = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const [isOpenModal, setIsOpenModal] = useState(false);\n\n  const openModal = () => {\n    setIsOpenModal(true);\n  };\n\n  const closeModal = () => {\n    setIsOpenModal(false);\n  };\n\n  const handleDeleteContact = contactId => {\n    dispatch(contactsOperations.deleteContact(contactId));\n  };\n\n  return (\n    <Contact>\n      <Person>\n        <FaPhone size={iconSize.xs} /> {name} : {number}\n      </Person>\n      <div>\n        <ButtonEdit type=\"button\" onClick={openModal}>\n          Edit\n        </ButtonEdit>\n        <ButtonDelete type=\"button\" onClick={() => handleDeleteContact(id)}>\n          Delete\n        </ButtonDelete>\n      </div>\n\n      {isOpenModal && (\n        <Modal closeModal={closeModal}>\n          <ContactEditForm\n            id={id}\n            filledName={name}\n            filledNumber={number}\n            closeModal={closeModal}\n          />\n        </Modal>\n      )}\n    </Contact>\n  );\n};\n\nexport default ContactElement;\n\nContactElement.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  width: 400px;\n  padding: 8px;\n  border: 1px solid black;\n  border-radius: 5px;\n  margin-top: 0;\n  margin-bottom: 0;\n`;\n\nexport const Paragraf = styled.p`\n  font-size: 18px;\n  font-weight: 400;\n  margin-top: 0;\n`;\n\nexport const ContactListDivision = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","import { useEffect } from 'react';\nimport ContactElement from '../ContactElement';\nimport { List, Paragraf, ContactListDivision } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectVisibleContacts } from '../../redux/contacts/selectors';\nimport * as contactsOperations from '../../redux/contacts/operations';\n\nconst ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.getContacts());\n  }, [dispatch]);\n\n  // console.log(contacts);\n\n  return (\n    <>\n      <ContactListDivision>\n        <Paragraf>My contacts</Paragraf>\n        <List>\n          {visibleContacts.length > 0 ? (\n            visibleContacts.map(({ id, name, number }) => {\n              return (\n                <ContactElement key={id} id={id} name={name} number={number} />\n              );\n            })\n          ) : (\n            <p>There is not contact whis that name </p>\n          )}\n        </List>\n      </ContactListDivision>\n    </>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ParagrafCreate = styled.p`\n  font-size: 18px;\n  font-weight: 400;\n  margin-top: 0;\n`;\n","import React from 'react';\nimport { Label, ParagrafCreate } from './Filter.styled';\nimport { Input } from '../ContactForm/ContactForm.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/contactsSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const changeFilter = event => {\n    dispatch(setFilter(event.currentTarget.value));\n  };\n\n  return (\n    <Label>\n      <ParagrafCreate>Find Contacts by name</ParagrafCreate>\n      <Input type=\"text\" value={filter} onChange={changeFilter} />\n    </Label>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Division = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 30px;\n  padding-top: 30px;\n  padding-bottom: 30px;\n`;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { Division } from './Contacts.styled';\n\nconst Contacts = () => {\n  return (\n    <Division>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </Division>\n  );\n};\n\nexport default Contacts;\n"],"names":["Form","styled","Label","Input","Button","ContactFormDivision","ParagrafCreate","selectContacts","state","contacts","items","selectFilter","filter","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","useState","setName","number","setNumber","dispatch","useDispatch","useSelector","handleChange","event","currentTarget","value","reset","onSubmit","preventDefault","newContact","id","nanoid","some","toast","contactsOperations","console","log","htmlFor","type","onChange","pattern","title","required","Contact","Person","ButtonDelete","ButtonEdit","BackDrop","ModalContent","modalRoot","document","querySelector","children","closeModal","useEffect","handleKeyDown","e","code","window","addEventListener","removeEventListener","createPortal","onClick","evt","target","filledName","filledNumber","editedContact","isOpenModal","setIsOpenModal","size","iconSize","contactId","List","Paragraf","ContactListDivision","visibleContacts","length","map","setFilter","Division"],"sourceRoot":""}